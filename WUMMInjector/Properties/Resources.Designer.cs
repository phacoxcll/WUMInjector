//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WUMMInjector.Properties {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WUMMInjector.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap all {
            get {
                object obj = ResourceManager.GetObject("all", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap audio {
            get {
                object obj = ResourceManager.GetObject("audio", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Byte[].
        /// </summary>
        internal static byte[] CDecrypt {
            get {
                object obj = ResourceManager.GetObject("CDecrypt", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap checkmark_16 {
            get {
                object obj = ResourceManager.GetObject("checkmark-16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Byte[].
        /// </summary>
        internal static byte[] CNUSPacker {
            get {
                object obj = ResourceManager.GetObject("CNUSPacker", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icon_multimedia {
            get {
                object obj = ResourceManager.GetObject("icon_multimedia", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap image {
            get {
                object obj = ResourceManager.GetObject("image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;meta charset=&quot;utf-8&quot;&gt;
        ///		&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot; /&gt;
        ///	&lt;/head&gt;
        ///	&lt;body onload=&quot;WUMMPlayer.Init()&quot;&gt;
        ///		&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;
        ///		&lt;script type=&quot;text/javascript&quot; src=&quot;ContentJSON.js&quot;&gt;&lt;/script&gt;
        ///		&lt;script type=&quot;text/javascript&quot; src=&quot;WUMMPlayer.js&quot;&gt;&lt;/script&gt;
        ///	&lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string index {
            get {
                return ResourceManager.GetString("index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Byte[].
        /// </summary>
        internal static byte[] libeay32 {
            get {
                object obj = ResourceManager.GetObject("libeay32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Loading {
            get {
                object obj = ResourceManager.GetObject("Loading", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap random {
            get {
                object obj = ResourceManager.GetObject("random", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap random_blue {
            get {
                object obj = ResourceManager.GetObject("random_blue", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a body {
        ///	background-color: #181818;
        ///	margin: 0;
        ///	padding: 0;
        ///}
        ///
        ///#menu {
        ///	list-style-type: none;
        ///	margin: 0;
        ///	padding: 0;
        ///	width: 192px;
        ///	background-color: #202020;
        ///	position: fixed;
        ///	height: 100%;
        ///	overflow: auto;
        ///}
        ///
        ///.menu_img {
        ///	width: 192px;
        ///	height: 192px;
        ///}
        ///
        ///#menu li a {
        ///	display: block;
        ///	color: #000000;
        ///	text-decoration: none;
        ///}
        ///
        ///#menu li a:hover {
        ///	background-color: #383838;
        ///	color: white;
        ///}
        ///
        ///.menu_active {
        ///	background-color: #2050B0;
        ///}
        ///
        ///#list {
        ///	font-size: 4em;
        ///	 [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string style {
            get {
                return ResourceManager.GetString("style", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap video {
            get {
                object obj = ResourceManager.GetObject("video", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a //WUMM Player beta 2
        ///
        ///WUMMPlayer = {};
        ///
        ///GamePad = {};
        ///Wiimote = {};
        ///Pro = {};
        ///
        ///GamePad.Controller = null;
        ///Wiimote.Controller = null;
        ///Pro.Controller = null;
        ///
        ///WUMMPlayer.Content = JSON.parse(ContentJSON);
        ///WUMMPlayer.CurrentPath = null;
        ///WUMMPlayer.CurrentFolder = null;
        ///WUMMPlayer.FileFilter = null;
        ///WUMMPlayer.FileList = null;
        ///WUMMPlayer.CurrentFileIndex = null;
        ///WUMMPlayer.CurrentItemIndex = null;
        ///WUMMPlayer.RandomAudio = false;
        ///WUMMPlayer.ImageMode = &apos;scale&apos;;
        ///WUMMPlayer.ImageScale = 1.0;
        /// [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string WUMMPlayer {
            get {
                return ResourceManager.GetString("WUMMPlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap x_mark_16 {
            get {
                object obj = ResourceManager.GetObject("x-mark-16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
