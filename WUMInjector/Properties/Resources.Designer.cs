//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WUMInjector.Properties {
    using System;
    
    
    /// <summary>
    ///   Clase de recurso fuertemente tipado, para buscar cadenas traducidas, etc.
    /// </summary>
    // StronglyTypedResourceBuilder generó automáticamente esta clase
    // a través de una herramienta como ResGen o Visual Studio.
    // Para agregar o quitar un miembro, edite el archivo .ResX y, a continuación, vuelva a ejecutar ResGen
    // con la opción /str o recompile su proyecto de VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Devuelve la instancia de ResourceManager almacenada en caché utilizada por esta clase.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WUMInjector.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Reemplaza la propiedad CurrentUICulture del subproceso actual para todas las
        ///   búsquedas de recursos mediante esta clase de recurso fuertemente tipado.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap audio {
            get {
                object obj = ResourceManager.GetObject("audio", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap back {
            get {
                object obj = ResourceManager.GetObject("back", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap border {
            get {
                object obj = ResourceManager.GetObject("border", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Byte[].
        /// </summary>
        internal static byte[] CDecrypt {
            get {
                object obj = ResourceManager.GetObject("CDecrypt", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap checkmark_16 {
            get {
                object obj = ResourceManager.GetObject("checkmark_16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Byte[].
        /// </summary>
        internal static byte[] CNUSPacker {
            get {
                object obj = ResourceManager.GetObject("CNUSPacker", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Byte[].
        /// </summary>
        internal static byte[] ffmpeg_4_3_1_win32_static {
            get {
                object obj = ResourceManager.GetObject("ffmpeg_4_3_1_win32_static", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap folder {
            get {
                object obj = ResourceManager.GetObject("folder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap icon_multimedia {
            get {
                object obj = ResourceManager.GetObject("icon_multimedia", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap image {
            get {
                object obj = ResourceManager.GetObject("image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a &lt;!DOCTYPE html&gt;
        ///&lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;meta charset=&quot;utf-8&quot;&gt;
        ///	&lt;/head&gt;
        ///	&lt;body onload=&quot;WUMPlayer.Init()&quot;&gt;
        ///		&lt;div id=&quot;content&quot;&gt;&lt;/div&gt;
        ///		&lt;script type=&quot;text/javascript&quot; src=&quot;wumplayer_fs.js&quot;&gt;&lt;/script&gt;
        ///		&lt;script type=&quot;text/javascript&quot; src=&quot;wumplayer.js&quot;&gt;&lt;/script&gt;
        ///	&lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string index {
            get {
                return ResourceManager.GetString("index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Byte[].
        /// </summary>
        internal static byte[] libeay32 {
            get {
                object obj = ResourceManager.GetObject("libeay32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Loading {
            get {
                object obj = ResourceManager.GetObject("Loading", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap next_audio {
            get {
                object obj = ResourceManager.GetObject("next_audio", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap pause_audio {
            get {
                object obj = ResourceManager.GetObject("pause_audio", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap play_audio {
            get {
                object obj = ResourceManager.GetObject("play_audio", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap random_audio {
            get {
                object obj = ResourceManager.GetObject("random_audio", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap random_audio_blue {
            get {
                object obj = ResourceManager.GetObject("random_audio_blue", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap video {
            get {
                object obj = ResourceManager.GetObject("video", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a //WUM Player v1
        ///
        ///WUMPlayer = {};
        ///
        ///DevKeyboard = {};
        ///GamePad = {};
        ///Wiimote = {};
        ///Pro = {};
        ///
        ///GamePad.Controller = null;
        ///Wiimote.Controller = null;
        ///Pro.Controller = null;
        ///
        ///WUMPlayer.Content = JSON.parse(fs);
        ///WUMPlayer.IsWiiU = window.nwf &amp;&amp; nwf.system &amp;&amp; nwf.system.isWiiU();
        ///WUMPlayer.Context = null;
        ///WUMPlayer.ItemIndex = -1;
        ///WUMPlayer.FileIndex = -1;
        ///WUMPlayer.PathIndices = [0];
        ///WUMPlayer.CurrentFolder = null;
        ///WUMPlayer.CurrentPath = null;
        ///
        ///WUMPlayer.MouseX = 0;
        ///WUMPlayer.MouseY = 0;
        ///        /// [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string wumplayer {
            get {
                return ResourceManager.GetString("wumplayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a body {
        ///	background-color: #181818;
        ///	color: #FFFFFF;
        ///	font-size: 73px;
        ///	font-family: Arial;
        ///	margin: 0;
        ///	padding: 0;
        ///	overflow: hidden;
        ///}
        ///
        ///a {
        ///	color: #FFFFFF;
        ///	text-decoration: none;
        ///}
        ///
        ///#measure_text_helper
        ///{
        ///	visibility: hidden;
        ///    position: absolute;
        ///    height: auto;
        ///    width: auto;
        ///    white-space: nowrap;
        ///}
        ///
        ///#mouse_point
        ///{
        ///	position: fixed;
        ///	border-radius: 20px;
        ///	background-color: rgba(0, 71, 179, 0.75);
        ///	border: 3px solid #FFFFFF;
        ///	width: 28px;
        ///	height: 28px;
        ///	pointer [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string wumplayer_style_1280 {
            get {
                return ResourceManager.GetString("wumplayer_style_1280", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a body {
        ///	background-color: #181818;
        ///	color: #FFFFFF;
        ///	font-size: 110px;
        ///	font-family: Arial;
        ///	margin: 0;
        ///	padding: 0;
        ///	overflow: hidden;
        ///}
        ///
        ///a {
        ///	color: #FFFFFF;
        ///	text-decoration: none;
        ///}
        ///
        ///#measure_text_helper
        ///{
        ///	visibility: hidden;
        ///    position: absolute;
        ///    height: auto;
        ///    width: auto;
        ///    white-space: nowrap;
        ///}
        ///
        ///#mouse_point
        ///{
        ///	position: fixed;
        ///	border-radius: 30px;
        ///	background-color: rgba(0, 71, 179, 0.75);
        ///	border: 4px solid #FFFFFF;
        ///	width: 42px;
        ///	height: 42px;
        ///	pointe [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string wumplayer_style_1920 {
            get {
                return ResourceManager.GetString("wumplayer_style_1920", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a body {
        ///	background-color: #181818;
        ///	color: #FFFFFF;
        ///	font-size: 49px;
        ///	font-family: Arial;
        ///	margin: 0;
        ///	padding: 0;
        ///	overflow: hidden;
        ///}
        ///
        ///a {
        ///	color: #FFFFFF;
        ///	text-decoration: none;
        ///}
        ///
        ///#measure_text_helper
        ///{
        ///	visibility: hidden;
        ///    position: absolute;
        ///    height: auto;
        ///    width: auto;
        ///    white-space: nowrap;
        ///}
        ///
        ///#mouse_point
        ///{
        ///	position: fixed;
        ///	border-radius: 14px;
        ///	background-color: rgba(0, 71, 179, 0.75);
        ///	border: 2px solid #FFFFFF;
        ///	width: 18px;
        ///	height: 18px;
        ///	pointer [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string wumplayer_style_640 {
            get {
                return ResourceManager.GetString("wumplayer_style_640", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca una cadena traducida similar a body {
        ///	background-color: #181818;
        ///	color: #FFFFFF;
        ///	font-size: 49px;
        ///	font-family: Arial;
        ///	margin: 0;
        ///	padding: 0;
        ///	overflow: hidden;
        ///}
        ///
        ///a {
        ///	color: #FFFFFF;
        ///	text-decoration: none;
        ///}
        ///
        ///#measure_text_helper
        ///{
        ///	visibility: hidden;
        ///    position: absolute;
        ///    height: auto;
        ///    width: auto;
        ///    white-space: nowrap;
        ///}
        ///
        ///#mouse_point
        ///{
        ///	position: fixed;
        ///	border-radius: 14px;
        ///	background-color: rgba(0, 71, 179, 0.75);
        ///	border: 2px solid #FFFFFF;
        ///	width: 18px;
        ///	height: 18px;
        ///	pointer [resto de la cadena truncado]&quot;;.
        /// </summary>
        internal static string wumplayer_style_854 {
            get {
                return ResourceManager.GetString("wumplayer_style_854", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Busca un recurso adaptado de tipo System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap x_mark_16 {
            get {
                object obj = ResourceManager.GetObject("x_mark_16", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
